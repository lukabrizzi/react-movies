{"ast":null,"code":"var _jsxFileName = \"/Users/lukabrizzi/Public/Proyects/React Course/movie-react/src/pages/movie/movie.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { URL_API, API } from \"../../utils/contants\";\nimport Loading from \"../../components/Loading\";\nimport ModalVideo from \"../../components/ModalVideo\";\nimport \"./movie.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Movie() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const movieInfo = useFetch(`${URL_API}/movie/${id}?api_key=${API}&language=es-ES`);\n\n  if (movieInfo.loading || !movieInfo.result) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(RenderMovie, {\n    movieInfo: movieInfo.result\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Movie, \"LM3QrxLCADxpfum0j3SdJJ7iu3g=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = Movie;\n\nfunction RenderMovie(props) {\n  const {\n    movieInfo: {\n      backdrop_path,\n      poster_path\n    }\n  } = props;\n  const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie\",\n    style: {\n      backgroundImage: `url('${backdropPath}')`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie__dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        offset: 3,\n        className: \"movie__poster\",\n        children: /*#__PURE__*/_jsxDEV(PosterMovie, {\n          image: poster_path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 10,\n        className: \"movie__info\",\n        children: /*#__PURE__*/_jsxDEV(MovieInfo, {\n          movieInfo: props.movieInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = RenderMovie;\n\nfunction PosterMovie(props) {\n  const {\n    image\n  } = props;\n  const posterPath = `https://image.tmdb.org/t/p/original${image}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: `url('${posterPath}')`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = PosterMovie;\n\nfunction MovieInfo(props) {\n  _s2();\n\n  const {\n    movieInfo: {\n      id,\n      title,\n      release_date,\n      overview,\n      genres\n    }\n  } = props;\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const videoMovie = useFetch(`${URL_API}/movie/${id}/videos?api_key=${API}&language=es-ES`);\n\n  const openModal = () => setIsVisibleModal(true);\n\n  const closeModal = () => setIsVisibleModal(false);\n\n  const renderVideo = () => {\n    if (videoMovie.result) {\n      if (videoMovie.result.results.length > 0) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            icon: \"play-circle\",\n            onClick: openModal,\n            children: \"Ver trailer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalVideo, {\n            videoKey: videoMovie.result.results[0].key,\n            videoPlatform: videoMovie.result.results[0].site,\n            isOpen: isVisibleModal,\n            close: closeModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie__info-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [title, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: moment(release_date, \"YYYY-MM-DD\").format(\"YYYY\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), renderVideo()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie__info-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"General\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: genres.map(gender => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: gender.name\n        }, gender.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(MovieInfo, \"+d/mXK7j8EGOEmAuWAoGU/vGoGU=\", false, function () {\n  return [useFetch];\n});\n\n_c4 = MovieInfo;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Movie\");\n$RefreshReg$(_c2, \"RenderMovie\");\n$RefreshReg$(_c3, \"PosterMovie\");\n$RefreshReg$(_c4, \"MovieInfo\");","map":{"version":3,"sources":["/Users/lukabrizzi/Public/Proyects/React Course/movie-react/src/pages/movie/movie.js"],"names":["React","useState","Row","Col","Button","useParams","moment","useFetch","URL_API","API","Loading","ModalVideo","Movie","id","movieInfo","loading","result","RenderMovie","props","backdrop_path","poster_path","backdropPath","backgroundImage","PosterMovie","image","posterPath","MovieInfo","title","release_date","overview","genres","isVisibleModal","setIsVisibleModal","videoMovie","openModal","closeModal","renderVideo","results","length","key","site","format","map","gender","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { URL_API, API } from \"../../utils/contants\";\nimport Loading from \"../../components/Loading\";\nimport ModalVideo from \"../../components/ModalVideo\";\n\nimport \"./movie.scss\";\n\nexport default function Movie() {\n  const { id } = useParams();\n  const movieInfo = useFetch(\n    `${URL_API}/movie/${id}?api_key=${API}&language=es-ES`\n  );\n\n  if (movieInfo.loading || !movieInfo.result) {\n    return <Loading />;\n  }\n\n  return <RenderMovie movieInfo={movieInfo.result} />;\n}\n\nfunction RenderMovie(props) {\n  const {\n    movieInfo: { backdrop_path, poster_path }\n  } = props;\n  const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n\n  return (\n    <div\n      className=\"movie\"\n      style={{ backgroundImage: `url('${backdropPath}')` }}\n    >\n      <div className=\"movie__dark\" />\n      <Row>\n        <Col span={8} offset={3} className=\"movie__poster\">\n          <PosterMovie image={poster_path} />\n        </Col>\n        <Col span={10} className=\"movie__info\">\n          <MovieInfo movieInfo={props.movieInfo} />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction PosterMovie(props) {\n  const { image } = props;\n  const posterPath = `https://image.tmdb.org/t/p/original${image}`;\n\n  return <div style={{ backgroundImage: `url('${posterPath}')` }} />;\n}\n\nfunction MovieInfo(props) {\n  const {\n    movieInfo: { id, title, release_date, overview, genres }\n  } = props;\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const videoMovie = useFetch(\n    `${URL_API}/movie/${id}/videos?api_key=${API}&language=es-ES`\n  );\n\n  const openModal = () => setIsVisibleModal(true);\n  const closeModal = () => setIsVisibleModal(false);\n\n  const renderVideo = () => {\n    if (videoMovie.result) {\n      if (videoMovie.result.results.length > 0) {\n        return (\n          <>\n            <Button icon=\"play-circle\" onClick={openModal}>\n              Ver trailer\n            </Button>\n            <ModalVideo\n              videoKey={videoMovie.result.results[0].key}\n              videoPlatform={videoMovie.result.results[0].site}\n              isOpen={isVisibleModal}\n              close={closeModal}\n            />\n          </>\n        );\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"movie__info-header\">\n        <h1>\n          {title}\n          <span>{moment(release_date, \"YYYY-MM-DD\").format(\"YYYY\")}</span>\n        </h1>\n        {renderVideo()}\n      </div>\n      <div className=\"movie__info-content\">\n        <h3>General</h3>\n        <p>{overview}</p>\n\n        <h3>Generos</h3>\n        <ul>\n          {genres.map(gender => (\n            <li key={gender.id}>{gender.name}</li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}